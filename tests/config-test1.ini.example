#Configuration file template for the test suite.
#
# Copy the file:
#     config-test1.ini.example --> config-test1.ini
# Then fill in information marked "ENTER_HERE".
#
# This template is used for the following tests:
#     test_finding.py
#     test_shopping.py

[keys]
#Your secret Ebay access keys.
#Generate the keys on: developer.ebay.com
dev_name = ENTER_HERE
app_name = ENTER_HERE
cert_name = ENTER_HERE

#Imgur key from: https://imgur.com/register/api_anon
imgur_key = NOT_NEEDED

[call]
#siteid, global_id: Identify the eBay site with the items you want 
#   information about, e.g. 
#   US:      siteid = 0,  global_id = EBAY-US
#   Germany: siteid = 77, global_id = EBAY-DE
#   See:
#   http://developer.ebay.com/devzone/finding/Concepts/SiteIDToGlobalID.html
#
#compatibility_level: The version used in header of the request. Tested values:
#   compatibility_level = 785
#   compatibility_level = 849
#   See:
#   http://developer.ebay.com/DevZone/XML/docs/HowTo/eBayWS/eBaySchemaVersioning.html
#   http://developer.ebay.com/devzone/xml/docs/releasenotes.html
siteid = 0
global_id = EBAY-US
compatibility_level = 849

[auth]
#You need production token here if you are using the Best Match, Client Alerts 
#and Feedback API
token = NOT_NEEDED

[research]
#The Research API credentials go here
Token = NOT_NEEDED
UserToken = NOT_NEEDED
DeveloperName = NOT_NEEDED

[endpoints]
#Specify the endpoints here, make sure endpoints and the auth credentials + 
#token match. 
#To use the production system, remove `.sandbox` from the URL. However trading
#API uses different naming scheme, see at bottom.
#
finding = http://svcs.ebay.com/services/search/FindingService/v1
shopping = http://open.api.ebay.com/shopping
#
feedback = https://svcs.ebay.com/FeedbackService
best_match = https://svcs.ebay.com/services/search/BestMatchItemDetailsService/v1
client_alerts = http://clientalerts.sandbox.ebay.com/ws/ecasvc/ClientAlerts
merchandising = http://svcs.sandbox.ebay.com/MerchandisingService
platform_notifications = https://api.sandbox.ebay.com/wsapi
product = http://svcs.sandbox.ebay.com/services/marketplacecatalog/ProductService/v1
research = http://api.researchadvanced.com/
resolution_case_management = https://svcs.sandbox.ebay.com/services/resolution/ResolutionCaseManagementService/v1
trading = https://api.sandbox.ebay.com/wsapi
# for production use:
#trading = https://api.ebay.com/ws/api.dll
